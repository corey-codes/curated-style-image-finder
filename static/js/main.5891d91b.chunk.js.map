{"version":3,"sources":["Head.js","Search.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Head","state","className","Component","Search","handleInputChange","e","console","log","target","value","setState","userSelection","action","htmlFor","onChange","this","name","id","ref","select","theme","defaultValue","type","onClick","event","props","handleSearch","Footer","App","searchValue","preventDefault","axios","url","method","dataResponse","params","client_id","apiKey","queryParam","page","per_page","query","then","response","data","results","allPhotos","getTheme","themeChoice","map","photo","src","links","download","alt","alt_description","href","user","portfolio_url","title","first_name","last_name","class","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5891d91b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\n//================================================\n\n\n// CONSTRUCTOR & SUPER ===========================\nclass Head extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n// FUNCTIONS ====================================\n\n\n// RENDER =======================================\n  render() {\n\n// RETURN ========================================\n    return (\n      <div className=\"header\">\n        <div className=\"wrapper\">\n\n          <div className=\"headerText\">\n            \n            <h1>Curated Style</h1>\n  \n            <div className=\"intro\">\n              \n              <p>\n                Life's too short to use terrible photos. Let us curate a collection of stock images for your convenience. Select a category to suit the theme of your website or blog to get a collection of gorgeous photos.\n              </p>\n\n            </div>\n\n          </div>\n\n        </div>\n        \n      </div>\n    );\n  }\n}\n\n\n// EXPORT =====================================\nexport default Head;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n//==============================================\n\n/* PSEUDO CODE =============================\n\n1. COMPONENT TO LET THE USER SELECT A THEME \n    A. USER SELECTS A THEME FROM A SELECT DROP DOWN\n    B. WHATEVER THE USER CLICKS ON WE WILL SAVE THAT SELECTION IN STATE\n    C. ON SUBMIT, WE WILL TAKE USER SELECTION AND PASS IT UP TO APP.JS THROUGH A FUNCTION THAT WAS PASSED DOWN IN PROPS\n\nWHAT WE NEED TO BUILD: \n-  NEED TO CREATE A FORM\n-  SET STATE\n-  FUNCTION FROM PROPS\n\n========================================*/\n\n\n// CONSTRUCTOR & SUPER ===========================\nclass Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      userSelection: \"\",\n    };\n  }\n\n// FUNCTIONS ====================================\nhandleInputChange = (e) => {\n  console.log(e.target.value);  \n  this.setState({\n    userSelection: e.target.value\n  });\n};\n\n// RENDER =======================================\n  render() {\n    const deferredFunction = (e) => this.props.getUserThemeSelectionProp(e, this.state.userSelection);\n\n// RETURN ========================================\n    return (\n\n      <div className=\"Search\">\n\n        <div className=\"wrapper\">\n\n{/* SEARCH SECTION =============*/}\n          <div className=\"searchSection\">\n\n            <h2>Search</h2>\n\n            <div className=\"formArea\">\n\n              <form action=\"\" className=\"themeForm\">\n              \n                <label htmlFor=\"theme\" className=\"visually-hidden\"></label>\n                <select onChange={this.handleInputChange} name=\"theme\" className=\"themeSelect\" id=\"themeSelect\" ref={select => this.theme}>\n\n                  <option defaultValue=\"default\" value=\"Choose One\">Select a category</option>\n                  <option value=\"Travel\">Travel</option>\n                  <option value=\"Home Decor\">Home Decor</option>\n                  <option value=\"Flat-lay\">Flat-lay</option>\n                  <option value=\"Food and Drink\">Food and Drink</option>\n                  <option value=\"Pets\">Pets</option>\n                  <option value=\"Wallpaper\">Wallpaper</option>\n\n                </select>\n\n                <button type=\"submit\" className=\"submitBtn\" \n                  onClick={(event) => {this.props.handleSearch(event, this.state.userSelection)}}\n                >\n                      Get My Photos\n                </button>\n\n              </form>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </div>\n    )\n  }\n}\n\n\n\n// EXPORT =====================================\nexport default Search;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\n\n// CONSTRUCTOR & SUPER ===========================\nclass Footer extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n\n// FUNCTIONS ====================================\n\n\n// RENDER =======================================\n  render() {\n\n// RETURN ========================================\n    return <div className=\"App\">\n\n        <div className=\"footer\">\n      \n                <p>Stock Image Curator | copyright 2019 Corey Derouin</p>\n\n        </div>\n\n    </div>;\n  }\n}\n\n\n\n\n\n\n\n\n// EXPORT =====================================\nexport default Footer;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Head from './Head.js';\nimport Search from './Search.js';\n// import Results from './Results';\nimport Footer from './Footer.js';\n//================================================\n\n/* PSEUDO CODE ===========================\n\n1. GET USER SELECTION FROM FORM\n2. CALL API\n    A. ADD IN USER SELECTION TO USE IN CALL\n    B. GET BACK PHOTOS \n    C. SAVE DATA IN STATE\n3. PRINT THE PHOTOS TO THE PAGE\n\n=========================================*/\n\n// CONSTRUCTOR & SUPER ===========================\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      allPhotos: [],\n      apiKey: \"787d03c5f6bcb1fd25de1eb439b440461a0859cbb19a541743b4af9a881af1ca\",\n      // pullPhotos: [],\n      // getPhotos: [],\n    };\n  }\n\n  handleSearch = (event, searchValue) => {\n    event.preventDefault();\n    axios({\n      url: `https://api.unsplash.com/search/photos?`,\n      method: \"GET\",\n      dataResponse: \"json\",\n      params: {\n        client_id: this.state.apiKey,\n        queryParam: \"value\",\n        page: 1,\n        per_page: 20,\n        query: searchValue\n      }\n    }).then(response => {\n      console.log(response.data.results);\n      const allPhotos = response.data.results;\n      this.setState({\n        allPhotos\n      }); console.log(allPhotos);\n    });\n  };\n\n// FUNCTIONS ====================================\n\n// 1. NEED TO GET THE THEME SELECTED BY THE USER ON THE FORM\n\n  getTheme = (e, themeChoice) => {\n    e.preventDefault();\n    // console.log(themeChoice);\n\n    const getPhotos = [...this.state.allPhotos];\n    // console.log(getPhotos, \"got some photos when I hit submit!\");\n  };\n\n// RENDER =======================================\n  render() {\n// RETURN ========================================\n    return (\n      <div className=\"App\">\n        <div className=\"flex\">\n          <Head />\n\n          <div className=\"main flex\">\n            <Search handleSearch={this.handleSearch} />\n\n{/* RESULTS */}\n            <div className=\"Results\">\n              <div className=\"wrapper\">\n                <div className=\"gallerySection\">\n                  <h2>Gallery Results</h2>\n                  <div className=\"galleryContainer\">\n                    {this.state.allPhotos.map( (photo) => {\n                      return (\n                        <div className=\"photos\">\n                          <img\n                            src={photo.links.download}\n                            alt={photo.alt_description}\n                          />\n                          <a href={photo.user.portfolio_url} target=\"_blank\" title=\"Visit the photographers website\" className=\"credit\">\n                            Photo by: {photo.user.first_name}{\" \"}\n                            {photo.user.last_name}\n                          </a>\n                          <a href={photo.links.download} target=\"_blank\" title=\"Download this photo\"><i class=\"fas fa-save download\"></i></a>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Footer />\n\n      </div>\n    );\n  }\n}\n// EXPORT =====================================\nexport default App;\n\n/* REMAINING:\n\n. APPEND PHOTOS TO PAGE\n4. ALT TAG DESCRIPTION\n2. ADD PHOTOGRAPHERS NAME\n3. LINK BACK TO PHOTOGRAPHERS UNSPLASH PROFILE\n3. CREDIT UNSPLASH\n5. DOWNLOAD LINK\n6. ERROR MESSAGE IF USER SUBMITS WITHOUT CHOOSING CATEGORY\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}